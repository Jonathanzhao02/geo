on:
  push:
  # run at least weekly to make sure we catch any regression from rust-beta
  schedule: [cron: "33 22 * * 6"]

name: Run tests
jobs:
  # The `ci-result` job doesn't actually test anything - it just aggregates the
  # overall build status for bors, otherwise our bors.toml would need an entry
  # for each individual job produced by the job-matrix.
  #
  # Ref: https://github.com/rust-lang/crater/blob/9ab6f9697c901c4a44025cf0a39b73ad5b37d198/.github/workflows/bors.yml#L125-L149
  #
  # ALL THE SUBSEQUENT JOBS NEED THEIR `name` ADDED TO THE `needs` SECTION OF THIS JOB!
  ci-result:
    name: ci result
    runs-on: ubuntu-latest
    needs:
      - cargo_test
      - geo_fuzz
      - build_bench
    steps:
      - name: Mark the job as a success
        if: success()
        run: exit 0
      - name: Mark the job as a failure
        if: "!success()"
        run: exit 1

  cargo_test:
    name: cargo test
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        container_image:
          # We aim to support rust-stable plus (at least) the prior 3 releases,
          # giving us about 6 months of coverage.
          #
          # Minimum supported rust version (MSRV)
          - "georust/geo-ci:rust-1.51"
          # Two most recent releases - we omit older ones for expedient CI
          - "georust/geo-ci:rust-1.55"
          - "georust/geo-ci:rust-1.56"
    container:
      image: ${{ matrix.container_image }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - run: cargo check --all-targets --no-default-features
      - run: cargo test --all-features

  geo_fuzz:
    name: geo-fuzz
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    defaults:
      run:
        working-directory: geo/fuzz
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo build --bins

  build_bench:
    name: build bench
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    container:
      image: georust/geo-ci
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - run: cargo bench --no-run

  # We want to catch any language level regressions before they hit stable, but
  # we don't necessarilly want to fail CI if it's a rust bug, so this job isn't
  # included in the "ci-result" job.
  rust_toolchain:
    name: rust toolchain
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, beta]
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{matrix.rust}}
      - run: cargo check --all-targets --no-default-features
      - run: cargo test --all-features

